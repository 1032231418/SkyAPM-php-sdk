// Code generated by protoc-gen-go. DO NOT EDIT.
// source: language-agent-v2/CLRMetric.proto

package agent2

import (
	agent "agent/agent/pb/agent"
	common "agent/agent/pb/common"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CLRMetricCollection struct {
	Metrics              []*agent.CLRMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	ServiceInstanceId    int32              `protobuf:"varint,2,opt,name=serviceInstanceId,proto3" json:"serviceInstanceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CLRMetricCollection) Reset()         { *m = CLRMetricCollection{} }
func (m *CLRMetricCollection) String() string { return proto.CompactTextString(m) }
func (*CLRMetricCollection) ProtoMessage()    {}
func (*CLRMetricCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f032372dea03c68, []int{0}
}

func (m *CLRMetricCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLRMetricCollection.Unmarshal(m, b)
}
func (m *CLRMetricCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLRMetricCollection.Marshal(b, m, deterministic)
}
func (m *CLRMetricCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLRMetricCollection.Merge(m, src)
}
func (m *CLRMetricCollection) XXX_Size() int {
	return xxx_messageInfo_CLRMetricCollection.Size(m)
}
func (m *CLRMetricCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_CLRMetricCollection.DiscardUnknown(m)
}

var xxx_messageInfo_CLRMetricCollection proto.InternalMessageInfo

func (m *CLRMetricCollection) GetMetrics() []*agent.CLRMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *CLRMetricCollection) GetServiceInstanceId() int32 {
	if m != nil {
		return m.ServiceInstanceId
	}
	return 0
}

func init() {
	proto.RegisterType((*CLRMetricCollection)(nil), "CLRMetricCollection")
}

func init() { proto.RegisterFile("language-agent-v2/CLRMetric.proto", fileDescriptor_1f032372dea03c68) }

var fileDescriptor_1f032372dea03c68 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x4d, 0x45, 0x8b, 0xeb, 0x45, 0x53, 0x95, 0x92, 0x53, 0x2d, 0x1e, 0x7a, 0x68, 0x27,
	0x90, 0xbe, 0x81, 0x01, 0xa1, 0x50, 0xa5, 0xa4, 0x07, 0xc1, 0xdb, 0x76, 0x3b, 0xc4, 0xb0, 0x7f,
	0x26, 0xec, 0xae, 0x29, 0x7d, 0x25, 0x9f, 0x52, 0x9a, 0x4d, 0xeb, 0x41, 0x2f, 0xbb, 0xc3, 0x37,
	0x33, 0xbf, 0x5d, 0x3e, 0xf6, 0xa8, 0xb8, 0x29, 0xbf, 0x78, 0x89, 0x33, 0x5e, 0xa2, 0xf1, 0xb3,
	0x26, 0x4b, 0xf3, 0x65, 0xf1, 0x8a, 0xde, 0x56, 0x02, 0x6a, 0x4b, 0x9e, 0x92, 0x81, 0x20, 0xad,
	0xc9, 0xa4, 0xe1, 0xea, 0xe0, 0x4d, 0x07, 0xf3, 0x65, 0x11, 0xc8, 0xb8, 0x62, 0x83, 0xd3, 0x66,
	0x4e, 0x4a, 0xa1, 0xf0, 0x15, 0x99, 0xf8, 0x89, 0xf5, 0x75, 0xcb, 0xdc, 0x30, 0x1a, 0x9d, 0x4f,
	0xae, 0x33, 0x06, 0xa7, 0xb1, 0xe2, 0xd8, 0x8a, 0xa7, 0xec, 0xd6, 0xa1, 0x6d, 0x2a, 0x81, 0x0b,
	0xe3, 0x3c, 0x37, 0x02, 0x17, 0xdb, 0x61, 0x6f, 0x14, 0x4d, 0x2e, 0x8a, 0xbf, 0x8d, 0xec, 0x85,
	0x3d, 0xfc, 0x66, 0x60, 0x4d, 0xd6, 0xaf, 0xc3, 0x4c, 0x3c, 0x65, 0x7d, 0x11, 0xde, 0x8e, 0xef,
	0xe0, 0x9f, 0xef, 0x24, 0x57, 0x90, 0x93, 0xd6, 0xdc, 0x6c, 0xdd, 0xf8, 0xec, 0x59, 0xb2, 0x39,
	0xd9, 0x12, 0x78, 0xcd, 0xc5, 0x27, 0x82, 0x93, 0xfb, 0x1d, 0x57, 0xb2, 0x32, 0x07, 0xa2, 0xc1,
	0xa0, 0xdf, 0x91, 0x95, 0x70, 0x14, 0x04, 0xad, 0x20, 0x68, 0xb2, 0x55, 0xf4, 0x71, 0xdf, 0xd6,
	0x69, 0x38, 0xeb, 0x4d, 0x28, 0xb2, 0xef, 0x5e, 0xb2, 0x96, 0xfb, 0xf7, 0x2e, 0xe3, 0x2d, 0xec,
	0xaf, 0x0e, 0x72, 0x04, 0xa9, 0xcd, 0x65, 0xab, 0x69, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x40,
	0x3a, 0x84, 0x15, 0x72, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CLRMetricReportServiceClient is the client API for CLRMetricReportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CLRMetricReportServiceClient interface {
	Collect(ctx context.Context, in *CLRMetricCollection, opts ...grpc.CallOption) (*common.Commands, error)
}

type cLRMetricReportServiceClient struct {
	cc *grpc.ClientConn
}

func NewCLRMetricReportServiceClient(cc *grpc.ClientConn) CLRMetricReportServiceClient {
	return &cLRMetricReportServiceClient{cc}
}

func (c *cLRMetricReportServiceClient) Collect(ctx context.Context, in *CLRMetricCollection, opts ...grpc.CallOption) (*common.Commands, error) {
	out := new(common.Commands)
	err := c.cc.Invoke(ctx, "/CLRMetricReportService/collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CLRMetricReportServiceServer is the server API for CLRMetricReportService service.
type CLRMetricReportServiceServer interface {
	Collect(context.Context, *CLRMetricCollection) (*common.Commands, error)
}

// UnimplementedCLRMetricReportServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCLRMetricReportServiceServer struct {
}

func (*UnimplementedCLRMetricReportServiceServer) Collect(ctx context.Context, req *CLRMetricCollection) (*common.Commands, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterCLRMetricReportServiceServer(s *grpc.Server, srv CLRMetricReportServiceServer) {
	s.RegisterService(&_CLRMetricReportService_serviceDesc, srv)
}

func _CLRMetricReportService_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CLRMetricCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CLRMetricReportServiceServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CLRMetricReportService/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CLRMetricReportServiceServer).Collect(ctx, req.(*CLRMetricCollection))
	}
	return interceptor(ctx, in, info, handler)
}

var _CLRMetricReportService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CLRMetricReportService",
	HandlerType: (*CLRMetricReportServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "collect",
			Handler:    _CLRMetricReportService_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "language-agent-v2/CLRMetric.proto",
}
