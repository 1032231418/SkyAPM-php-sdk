// Code generated by protoc-gen-go. DO NOT EDIT.
// source: JVMMetricsService.proto

package pb5

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PoolType int32

const (
	PoolType_CODE_CACHE_USAGE PoolType = 0
	PoolType_NEWGEN_USAGE     PoolType = 1
	PoolType_OLDGEN_USAGE     PoolType = 2
	PoolType_SURVIVOR_USAGE   PoolType = 3
	PoolType_PERMGEN_USAGE    PoolType = 4
	PoolType_METASPACE_USAGE  PoolType = 5
)

var PoolType_name = map[int32]string{
	0: "CODE_CACHE_USAGE",
	1: "NEWGEN_USAGE",
	2: "OLDGEN_USAGE",
	3: "SURVIVOR_USAGE",
	4: "PERMGEN_USAGE",
	5: "METASPACE_USAGE",
}

var PoolType_value = map[string]int32{
	"CODE_CACHE_USAGE": 0,
	"NEWGEN_USAGE":     1,
	"OLDGEN_USAGE":     2,
	"SURVIVOR_USAGE":   3,
	"PERMGEN_USAGE":    4,
	"METASPACE_USAGE":  5,
}

func (x PoolType) String() string {
	return proto.EnumName(PoolType_name, int32(x))
}

func (PoolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{0}
}

type GCPhrase int32

const (
	GCPhrase_NEW GCPhrase = 0
	GCPhrase_OLD GCPhrase = 1
)

var GCPhrase_name = map[int32]string{
	0: "NEW",
	1: "OLD",
}

var GCPhrase_value = map[string]int32{
	"NEW": 0,
	"OLD": 1,
}

func (x GCPhrase) String() string {
	return proto.EnumName(GCPhrase_name, int32(x))
}

func (GCPhrase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{1}
}

type JVMMetrics struct {
	Metrics               []*JVMMetric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	ApplicationInstanceId int32        `protobuf:"varint,2,opt,name=applicationInstanceId,proto3" json:"applicationInstanceId,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}     `json:"-"`
	XXX_unrecognized      []byte       `json:"-"`
	XXX_sizecache         int32        `json:"-"`
}

func (m *JVMMetrics) Reset()         { *m = JVMMetrics{} }
func (m *JVMMetrics) String() string { return proto.CompactTextString(m) }
func (*JVMMetrics) ProtoMessage()    {}
func (*JVMMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{0}
}

func (m *JVMMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JVMMetrics.Unmarshal(m, b)
}
func (m *JVMMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JVMMetrics.Marshal(b, m, deterministic)
}
func (m *JVMMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JVMMetrics.Merge(m, src)
}
func (m *JVMMetrics) XXX_Size() int {
	return xxx_messageInfo_JVMMetrics.Size(m)
}
func (m *JVMMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_JVMMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_JVMMetrics proto.InternalMessageInfo

func (m *JVMMetrics) GetMetrics() []*JVMMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *JVMMetrics) GetApplicationInstanceId() int32 {
	if m != nil {
		return m.ApplicationInstanceId
	}
	return 0
}

type JVMMetric struct {
	Time                 int64         `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Cpu                  *CPU          `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               []*Memory     `protobuf:"bytes,3,rep,name=memory,proto3" json:"memory,omitempty"`
	MemoryPool           []*MemoryPool `protobuf:"bytes,4,rep,name=memoryPool,proto3" json:"memoryPool,omitempty"`
	Gc                   []*GC         `protobuf:"bytes,5,rep,name=gc,proto3" json:"gc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *JVMMetric) Reset()         { *m = JVMMetric{} }
func (m *JVMMetric) String() string { return proto.CompactTextString(m) }
func (*JVMMetric) ProtoMessage()    {}
func (*JVMMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{1}
}

func (m *JVMMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JVMMetric.Unmarshal(m, b)
}
func (m *JVMMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JVMMetric.Marshal(b, m, deterministic)
}
func (m *JVMMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JVMMetric.Merge(m, src)
}
func (m *JVMMetric) XXX_Size() int {
	return xxx_messageInfo_JVMMetric.Size(m)
}
func (m *JVMMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_JVMMetric.DiscardUnknown(m)
}

var xxx_messageInfo_JVMMetric proto.InternalMessageInfo

func (m *JVMMetric) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *JVMMetric) GetCpu() *CPU {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *JVMMetric) GetMemory() []*Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *JVMMetric) GetMemoryPool() []*MemoryPool {
	if m != nil {
		return m.MemoryPool
	}
	return nil
}

func (m *JVMMetric) GetGc() []*GC {
	if m != nil {
		return m.Gc
	}
	return nil
}

type CPU struct {
	UsagePercent         float64  `protobuf:"fixed64,2,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPU) Reset()         { *m = CPU{} }
func (m *CPU) String() string { return proto.CompactTextString(m) }
func (*CPU) ProtoMessage()    {}
func (*CPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{2}
}

func (m *CPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPU.Unmarshal(m, b)
}
func (m *CPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPU.Marshal(b, m, deterministic)
}
func (m *CPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPU.Merge(m, src)
}
func (m *CPU) XXX_Size() int {
	return xxx_messageInfo_CPU.Size(m)
}
func (m *CPU) XXX_DiscardUnknown() {
	xxx_messageInfo_CPU.DiscardUnknown(m)
}

var xxx_messageInfo_CPU proto.InternalMessageInfo

func (m *CPU) GetUsagePercent() float64 {
	if m != nil {
		return m.UsagePercent
	}
	return 0
}

type Memory struct {
	IsHeap               bool     `protobuf:"varint,1,opt,name=isHeap,proto3" json:"isHeap,omitempty"`
	Init                 int64    `protobuf:"varint,2,opt,name=init,proto3" json:"init,omitempty"`
	Max                  int64    `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Used                 int64    `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
	Committed            int64    `protobuf:"varint,5,opt,name=committed,proto3" json:"committed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{3}
}

func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (m *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(m, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetIsHeap() bool {
	if m != nil {
		return m.IsHeap
	}
	return false
}

func (m *Memory) GetInit() int64 {
	if m != nil {
		return m.Init
	}
	return 0
}

func (m *Memory) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Memory) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *Memory) GetCommitted() int64 {
	if m != nil {
		return m.Committed
	}
	return 0
}

type MemoryPool struct {
	Type                 PoolType `protobuf:"varint,1,opt,name=type,proto3,enum=PoolType" json:"type,omitempty"`
	Init                 int64    `protobuf:"varint,2,opt,name=init,proto3" json:"init,omitempty"`
	Max                  int64    `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Used                 int64    `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
	Commited             int64    `protobuf:"varint,5,opt,name=commited,proto3" json:"commited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryPool) Reset()         { *m = MemoryPool{} }
func (m *MemoryPool) String() string { return proto.CompactTextString(m) }
func (*MemoryPool) ProtoMessage()    {}
func (*MemoryPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{4}
}

func (m *MemoryPool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryPool.Unmarshal(m, b)
}
func (m *MemoryPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryPool.Marshal(b, m, deterministic)
}
func (m *MemoryPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryPool.Merge(m, src)
}
func (m *MemoryPool) XXX_Size() int {
	return xxx_messageInfo_MemoryPool.Size(m)
}
func (m *MemoryPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryPool.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryPool proto.InternalMessageInfo

func (m *MemoryPool) GetType() PoolType {
	if m != nil {
		return m.Type
	}
	return PoolType_CODE_CACHE_USAGE
}

func (m *MemoryPool) GetInit() int64 {
	if m != nil {
		return m.Init
	}
	return 0
}

func (m *MemoryPool) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *MemoryPool) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *MemoryPool) GetCommited() int64 {
	if m != nil {
		return m.Commited
	}
	return 0
}

type GC struct {
	Phrase               GCPhrase `protobuf:"varint,1,opt,name=phrase,proto3,enum=GCPhrase" json:"phrase,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Time                 int64    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GC) Reset()         { *m = GC{} }
func (m *GC) String() string { return proto.CompactTextString(m) }
func (*GC) ProtoMessage()    {}
func (*GC) Descriptor() ([]byte, []int) {
	return fileDescriptor_00c974b20ace2bbf, []int{5}
}

func (m *GC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GC.Unmarshal(m, b)
}
func (m *GC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GC.Marshal(b, m, deterministic)
}
func (m *GC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GC.Merge(m, src)
}
func (m *GC) XXX_Size() int {
	return xxx_messageInfo_GC.Size(m)
}
func (m *GC) XXX_DiscardUnknown() {
	xxx_messageInfo_GC.DiscardUnknown(m)
}

var xxx_messageInfo_GC proto.InternalMessageInfo

func (m *GC) GetPhrase() GCPhrase {
	if m != nil {
		return m.Phrase
	}
	return GCPhrase_NEW
}

func (m *GC) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GC) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func init() {
	proto.RegisterEnum("PoolType", PoolType_name, PoolType_value)
	proto.RegisterEnum("GCPhrase", GCPhrase_name, GCPhrase_value)
	proto.RegisterType((*JVMMetrics)(nil), "JVMMetrics")
	proto.RegisterType((*JVMMetric)(nil), "JVMMetric")
	proto.RegisterType((*CPU)(nil), "CPU")
	proto.RegisterType((*Memory)(nil), "Memory")
	proto.RegisterType((*MemoryPool)(nil), "MemoryPool")
	proto.RegisterType((*GC)(nil), "GC")
}

func init() { proto.RegisterFile("JVMMetricsService.proto", fileDescriptor_00c974b20ace2bbf) }

var fileDescriptor_00c974b20ace2bbf = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0xeb, 0x6c, 0xde, 0x3a, 0xe9, 0xd3, 0xc7, 0x9d, 0x96, 0x62, 0x45, 0x45, 0x14, 0x0b,
	0x44, 0x29, 0x92, 0x0f, 0x01, 0x2e, 0xdc, 0x82, 0x63, 0xa5, 0x45, 0x75, 0x62, 0x36, 0x4d, 0x2b,
	0x71, 0xa9, 0xdc, 0xed, 0x2a, 0xb5, 0x62, 0x7b, 0x2d, 0x7b, 0x43, 0x9a, 0x1b, 0x7c, 0x0d, 0x3e,
	0x02, 0x9f, 0x12, 0x79, 0xed, 0xc4, 0x20, 0xb8, 0x71, 0xfb, 0xcf, 0x6f, 0xfe, 0x9e, 0x17, 0xaf,
	0x06, 0x1e, 0x7f, 0xbc, 0x72, 0x5d, 0x2e, 0xd3, 0x80, 0x65, 0x13, 0x9e, 0x7e, 0x09, 0x18, 0xb7,
	0x92, 0x54, 0x48, 0xd1, 0xd5, 0x07, 0x62, 0x19, 0x67, 0x32, 0xe5, 0x7e, 0x54, 0x10, 0xf3, 0x1e,
	0xa0, 0x32, 0xe3, 0x73, 0x68, 0x45, 0x85, 0x34, 0xb4, 0x63, 0x72, 0xd2, 0xe9, 0x81, 0xb5, 0xc9,
	0xd2, 0x75, 0x0a, 0xdf, 0xc2, 0x23, 0x3f, 0x49, 0xc2, 0x80, 0xf9, 0x32, 0x10, 0xf1, 0x79, 0x9c,
	0x49, 0x3f, 0x66, 0xfc, 0xfc, 0xce, 0xa8, 0x1d, 0x6b, 0x27, 0x0d, 0xfa, 0xf7, 0xa4, 0xf9, 0x5d,
	0x83, 0xed, 0x4d, 0x31, 0x44, 0xa8, 0xcb, 0x20, 0xe2, 0x86, 0x76, 0xac, 0x9d, 0x10, 0xaa, 0x34,
	0x1e, 0x02, 0x61, 0xc9, 0x42, 0x55, 0xe9, 0xf4, 0xea, 0x96, 0xed, 0x4d, 0x69, 0x0e, 0xf0, 0x29,
	0x34, 0x23, 0x1e, 0x89, 0x74, 0x65, 0x10, 0x35, 0x54, 0xcb, 0x72, 0x55, 0x48, 0x4b, 0x8c, 0xaf,
	0x01, 0x0a, 0xe5, 0x09, 0x11, 0x1a, 0x75, 0x65, 0xea, 0x94, 0xa6, 0x1c, 0xd1, 0x5f, 0xd2, 0xb8,
	0x0f, 0xb5, 0x19, 0x33, 0x1a, 0xca, 0x44, 0xac, 0xa1, 0x4d, 0x6b, 0x33, 0x66, 0xbe, 0x02, 0x62,
	0x7b, 0x53, 0x34, 0x61, 0x67, 0x91, 0xf9, 0x33, 0xee, 0xf1, 0x94, 0xf1, 0x58, 0xaa, 0x51, 0x34,
	0xfa, 0x1b, 0x33, 0x1f, 0xa0, 0x59, 0x54, 0xc6, 0x43, 0x68, 0x06, 0xd9, 0x19, 0xf7, 0x13, 0xb5,
	0x45, 0x9b, 0x96, 0x51, 0xbe, 0x5b, 0x10, 0x07, 0xc5, 0xd7, 0x84, 0x2a, 0x8d, 0x3a, 0x90, 0xc8,
	0x7f, 0x30, 0x88, 0x42, 0xb9, 0xcc, 0x5d, 0x8b, 0x8c, 0xdf, 0x19, 0xf5, 0xc2, 0x95, 0x6b, 0x3c,
	0x82, 0x6d, 0x26, 0xa2, 0x28, 0x90, 0x92, 0xdf, 0x19, 0x0d, 0x95, 0xa8, 0x80, 0xf9, 0x4d, 0x03,
	0xa8, 0x96, 0xc2, 0x27, 0x50, 0x97, 0xab, 0xa4, 0xf8, 0x85, 0xbb, 0xbd, 0x6d, 0x2b, 0x87, 0x97,
	0xab, 0x84, 0x53, 0x85, 0xff, 0x61, 0x8a, 0x2e, 0xb4, 0x8b, 0xa6, 0x9b, 0x21, 0x36, 0xb1, 0xf9,
	0x09, 0x6a, 0x43, 0x1b, 0x9f, 0x41, 0x33, 0xb9, 0x4f, 0xfd, 0xac, 0x6a, 0x3e, 0xb4, 0x3d, 0x05,
	0x68, 0x99, 0xc0, 0x03, 0x68, 0x30, 0xb1, 0x88, 0xd7, 0xfd, 0x8b, 0x60, 0xf3, 0xec, 0xa4, 0x7a,
	0xf6, 0xd3, 0xaf, 0x1a, 0xb4, 0xd7, 0xb3, 0xe3, 0x01, 0xe8, 0xf6, 0x78, 0xe0, 0xdc, 0xd8, 0x7d,
	0xfb, 0xcc, 0xb9, 0x99, 0x4e, 0xfa, 0x43, 0x47, 0xdf, 0x42, 0x1d, 0x76, 0x46, 0xce, 0xf5, 0xd0,
	0x19, 0x95, 0x44, 0xcb, 0xc9, 0xf8, 0x62, 0x50, 0x91, 0x1a, 0x22, 0xec, 0x4e, 0xa6, 0xf4, 0xea,
	0xfc, 0x6a, 0x4c, 0x4b, 0x46, 0x70, 0x0f, 0xfe, 0xf3, 0x1c, 0xea, 0x56, 0xb6, 0x3a, 0xee, 0xc3,
	0xff, 0xae, 0x73, 0xd9, 0x9f, 0x78, 0x7d, 0x7b, 0x5d, 0xbf, 0x71, 0x7a, 0x04, 0xed, 0xf5, 0x02,
	0xd8, 0x02, 0x32, 0x72, 0xae, 0xf5, 0xad, 0x5c, 0x8c, 0x2f, 0x06, 0xba, 0xd6, 0x7b, 0x0f, 0x7b,
	0x7f, 0x1c, 0x14, 0xbe, 0x80, 0x16, 0x13, 0x61, 0xc8, 0x99, 0xc4, 0x4e, 0x75, 0x24, 0x59, 0xb7,
	0x63, 0x55, 0x37, 0x66, 0x6e, 0x7d, 0x70, 0xe1, 0xa5, 0x48, 0x67, 0x96, 0x9f, 0xf8, 0xec, 0x9e,
	0x5b, 0xd9, 0x7c, 0xb5, 0xf4, 0xc3, 0x79, 0x10, 0xe7, 0x24, 0xb2, 0x62, 0x2e, 0x97, 0x22, 0x9d,
	0x17, 0xa7, 0xe8, 0x69, 0x9f, 0x49, 0x72, 0xfb, 0xee, 0x47, 0xad, 0x3b, 0x99, 0xaf, 0xae, 0x4b,
	0xd7, 0xa8, 0x70, 0x78, 0xb9, 0x81, 0x89, 0xf0, 0xb6, 0xa9, 0xac, 0x6f, 0x7e, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0x45, 0xb0, 0x23, 0xe2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JVMMetricsServiceClient is the client API for JVMMetricsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JVMMetricsServiceClient interface {
	Collect(ctx context.Context, in *JVMMetrics, opts ...grpc.CallOption) (*Downstream, error)
}

type jVMMetricsServiceClient struct {
	cc *grpc.ClientConn
}

func NewJVMMetricsServiceClient(cc *grpc.ClientConn) JVMMetricsServiceClient {
	return &jVMMetricsServiceClient{cc}
}

func (c *jVMMetricsServiceClient) Collect(ctx context.Context, in *JVMMetrics, opts ...grpc.CallOption) (*Downstream, error) {
	out := new(Downstream)
	err := c.cc.Invoke(ctx, "/JVMMetricsService/collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JVMMetricsServiceServer is the server API for JVMMetricsService service.
type JVMMetricsServiceServer interface {
	Collect(context.Context, *JVMMetrics) (*Downstream, error)
}

// UnimplementedJVMMetricsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJVMMetricsServiceServer struct {
}

func (*UnimplementedJVMMetricsServiceServer) Collect(ctx context.Context, req *JVMMetrics) (*Downstream, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Collect not implemented")
}

func RegisterJVMMetricsServiceServer(s *grpc.Server, srv JVMMetricsServiceServer) {
	s.RegisterService(&_JVMMetricsService_serviceDesc, srv)
}

func _JVMMetricsService_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JVMMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JVMMetricsServiceServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/JVMMetricsService/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JVMMetricsServiceServer).Collect(ctx, req.(*JVMMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

var _JVMMetricsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "JVMMetricsService",
	HandlerType: (*JVMMetricsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "collect",
			Handler:    _JVMMetricsService_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "JVMMetricsService.proto",
}
